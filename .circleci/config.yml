version: 2.1
orbs: 
  snyk: snyk/snyk@0.0.8
executors:
  docker-publisher:
    environment:
      FLASK_ENV: production
      FLASK_APP: microblog.py
      IMAGE_NAME: microblog-1_prod
      CI_IMAGE_NAME: project_prod
      IMG_SHORT: prod
    docker:
      - image: circleci/buildpack-deps:stretch
jobs:
  test:
    machine: true
    working_directory: ~/repo

    environment:
      FLASK_ENV: test
      FLASK_APP: microblog.py
    steps:
      - checkout
      - run:
          name: run docker tests
          command: |
            make test
  test_all:
    machine: true
    working_directory: ~/repo

    environment:
      FLASK_ENV: test
      FLASK_APP: microblog.py
    steps:
      - checkout
      - run:
          name: run docker tests
          command: |
            make test
  build:
    executor: docker-publisher
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build Docker image
          command: docker-compose up --build -d $IMG_SHORT
      - run:
          name: Rename Docker image
          command: docker tag $CI_IMAGE_NAME:latest mabn17/microblog-1_prod:latest
      - run:
          name: Archive Docker image
          command: docker save -o image.tar mabn17/microblog-1_prod
      - persist_to_workspace:
          root: .
          paths:
            - ./image.tar
  publish-latest:
    executor: docker-publisher
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - setup_remote_docker
      - run:
          name: Load archived Docker image
          command: docker load -i /tmp/workspace/image.tar
      - run:
          name: Publish Docker Image to Docker Hub
          command: |
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker push mabn17/microblog-1_prod:latest
  update-app-server:
    executor: docker-publisher
    working_directory: ~/project
    steps:
      - checkout
      - run:
          name: Install venv
          command: sudo apt-get install python3-venv
      - run:
          name: Create venv
          command: python3 -m venv venv
      - run: echo "source ~/project/venv/bin/activate" >> $BASH_ENV
      - run:
          name: Install requirements to deploy app
          command: pip3 install -r requirements/deploy.txt
      - run:
          name: Prepare password file
          command: echo "$VALUT_PASS" > ~/project/ansible/.vault_password.txt
      - run:
          name: Decrypt files and push to app_server
          command: cd ansible && ansible-playbook gather_aws_instances.yml udpate_image.yml --vault-password-file .vault_password.txt
  snyk:
    docker:
      - image: circleci/python:3.5
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            make install
      - run: echo "source ~/repo/venv/bin/activate" >> $BASH_ENV
      - snyk/scan

workflows:
  version: 2
  build-master:
    jobs:
      - test_all:
          filters:
            branches:
              only: master
      - test:
          filters:
            tags:
              only: /^v[0-9]++.[0-9]++.[0-9]++$/
            branches:
              ignore: /.*/
      - build:
          requires:
            - test
          filters:
            tags:
              only: /^v[0-9]++.[0-9]++.[0-9]++$/
            branches:
              ignore: /.*/
      - publish-latest:
          requires:
            - build
          filters:
            tags:
              only: /^v[0-9]++.[0-9]++.[0-9]++$/
            branches:
              ignore: /.*/
      - snyk/scan:
          requires:
            - publish-latest
          tags:
            only: /^v[0-9]++.[0-9]++.[0-9]++$/
          branches:
            ignore: /.*/
          docker-image-name: $IMAGE_NAME
      - update-app-server:
          requires:
            - snyk/scan
          filters:
            tags:
              only: /^v[0-9]++.[0-9]++.[0-9]++$/
            branches:
              ignore: /.*/