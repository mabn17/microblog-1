version: 2.1
executors:
  docker-publisher:
    environment:
      FLASK_ENV: production
      FLASK_APP: microblog.py
      IMAGE_NAME: microblog-1_prod
    docker:
      - image: circleci/buildpack-deps:stretch
jobs:
  test:
    docker:
      - image: circleci/python:3.7-node-browsers-legacy
    working_directory: ~/repo
    environment:
      FLASK_ENV: test
      FLASK_APP: microblog.py
    steps:
      - checkout
      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            make install-test
      - run:
          name: run integration tests
          command: |
            . venv/bin/activate
            make test-integration
      - run:
          name: run unittests
          command: |
            . venv/bin/activate
            make test-unit
      - run:
          name: run validate
          command: |
            . venv/bin/activate
            make validate
  build:
    executor: docker-publisher
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build Docker image
          command: docker-compose up --build -d prod
      - run:
          name: Arcive Docker image
          command: docker save -o image.tar $IMAGE_NAME
      - persist_to_workspace:
          root: .
          paths:
            - ./image.tar
  publish-latest:
    executor: docker-publisher
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - setup_remote_docker
      - run:
          name: Load archived Docker image
          command: docker load -i /tmp/workspace/image.tar
      - run:
          name: Publish Docker Image to Docker Hub
          command: |
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker push mabn17/$IMAGE_NAME:latest
workflows:
  version: 2
  build-master:
    jobs:
      - test:
          filters:
            branches:
              only: master
      - build:
          filters:
            branches:
              only: master
      - publish-latest:
          requires:
            - build
          filters:
            branches:
              only: master