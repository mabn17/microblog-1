version: 2.1
executors:
  docker-publisher:
    environment:
      FLASK_ENV: production
      FLASK_APP: microblog.py
      IMAGE_NAME: microblog-1_prod
      CI_IMAGE_NAME: project_prod
      IMG_SHORT: prod
    docker:
      - image: circleci/buildpack-deps:stretch
jobs:
  test:
    machine: true
    working_directory: ~/repo

    environment:
      FLASK_ENV: test
      FLASK_APP: microblog.py
    steps:
      - checkout
      - run:
          name: run docker tests
          command: |
            make test
  build:
    executor: docker-publisher
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build Docker image
          command: docker-compose up --build -d $IMG_SHORT
      - run:
          name: Rename Docker image
          command: docker tag $CI_IMAGE_NAME:latest mabn17/microblog-1_prod:latest
      - run:
          name: Archive Docker image
          command: docker save -o image.tar mabn17/microblog-1_prod
      - persist_to_workspace:
          root: .
          paths:
            - ./image.tar
  publish-latest:
    executor: docker-publisher
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - setup_remote_docker
      - run:
          name: Load archived Docker image
          command: docker load -i /tmp/workspace/image.tar
      - run:
          name: Publish Docker Image to Docker Hub
          command: |
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker push mabn17/microblog-1_prod:latest
  update-app-server:
    executor: docker-publisher
    steps:
      - checkout
      - run:
          name: Install venv
          command: sudo apt-get install python3-venv
      - run:
          name: Create venv
          command: python3 -m venv venv
      - run: echo "source ~/venv/bin/activate" >> $BASH_ENV
      - run:
          name: Install requirements to deploy app
          command: pip3 install -r requirements/deploy.txt
      - run:
          name: Decrypt files
          command: cd ansible && ansible-vault decrypt aws_keys.yml && ansible-playbook gather_aws_instances.yml app_server.yml

workflows:
  version: 2
  build-master:
    jobs:
      # - test:
      #     filters:
      #       branches:
      #         only: master
      # - build:
      #     requires:
      #       - test
      #     filters:
      #       branches:
      #         only: master
      # - publish-latest:
      #     requires:
      #       - build
      #     filters:
      #       branches:
      #         only: master
      - update-app-server:
          # requires:
            # - publish-latest
          filters:
            branches:
              only: master